(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{304:function(a,t,s){"use strict";s.r(t);var e=s(6),r=Object(e.a)({},(function(){var a=this,t=a._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("h2",{attrs:{id:"简介"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[a._v("#")]),a._v(" 简介")]),a._v(" "),t("ul",[t("li",[a._v("通常会有定时接入数据到库中，或者对库表数据进行统计计算的需求，而这类需求可由Java程序来定时完成。当前整理了两种方案来将Java程序部署到linux上。")])]),a._v(" "),t("h2",{attrs:{id:"java-util-timer版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#java-util-timer版"}},[a._v("#")]),a._v(" java.util.Timer版")]),a._v(" "),t("ol",[t("li",[a._v("创建类继承 java.util.TimerTask 类，重写 run 方法（要执行的任务逻辑由run方法来调）")]),a._v(" "),t("li",[a._v("在main方法中声明 java.util.Timer 对象，调用其 schedule 或 scheduleAtFixedRate 方法即可实现定时\n"),t("ul",[t("li",[a._v("scheduleAtFixedRate(TimerTask, firstTime, period) 若设置的开始时间已过去，则启动后会补上已过时间内的任务运行(即错过几次就连续执行几次)")]),a._v(" "),t("li",[a._v("schedule(TimerTask, firstTime, period) 若设置的开始时间已过去，则启动后只补上一次执行，执行完后每过period 毫秒都会执行一次任务。")])])]),a._v(" "),t("li",[a._v("这个方法部署到Linux很简单，只需要手动运行一次main方法即可")])]),a._v(" "),t("h2",{attrs:{id:"linux-crontab版"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#linux-crontab版"}},[a._v("#")]),a._v(" Linux crontab版")]),a._v(" "),t("ol",[t("li",[a._v("在main方法中调用要执行的任务逻辑，就是一个普通的Java程序，不需要设置定时器，定时器是通过linux的crontab来设置的")]),a._v(" "),t("li",[a._v("创建两个文件夹，如 /opt/pro1 及 /opt/pro1/lib"),t("div",{staticClass:"language-linux extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("mkdir /opt/pro1\nmkdir /opt/pro1/lib\n")])])])]),a._v(" "),t("li",[a._v("将程序打包成jar，与程序所用到的jar放置到 /opt/pro1/lib 下")]),a._v(" "),t("li",[a._v("创建脚本文件/opt/pro1/start.sh, 编辑"),t("div",{staticClass:"language-linux extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("touch /opt/pro1/start.sh\nvim /opt/pro1/start.sh\n")])])]),a._v("写入以下内容："),t("div",{staticClass:"language-linux extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v('#! /bin/sh\n# 程序配置文件所在目录\nclass_path="./conf/"\n# main方法所在类，这里假设在Core\njava_exe=com.ryan.Core\n# 载入程序运行所需jar包\nfor each_lib in $(ls /opt/pro1/lib); do\n\tclass_path=$class_path:/opt/pro1/lib/$each_lib\ndone\nexec java -classpath $class_path $java_exe\n')])])])]),a._v(" "),t("li",[a._v("设置定时任务"),t("div",{staticClass:"language-linux extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("crontab -e\n\t// 追加以下内容\n\t0 * * * *\t/opt/pro1/start.sh > /dev/null 2>&1\n\n// 查看当前所有定时任务\ncrontab -l\n")])])])]),a._v(" "),t("li",[a._v("若到点后start.sh文件报无法运行的错误，需这样执行"),t("div",{staticClass:"language-linux extra-class"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[a._v("// 添加执行权限\nchmod +x start.sh\n\n// 修改文件编码格式\nvim start.sh\n按esc键后 输入:set ff=unix后回车即可\n// 若输入:set ff回车可查看当前文件编码格式喔\n")])])])])]),a._v(" "),t("hr"),a._v(" "),t("p",[t("em",[a._v("就这些啦~")])])])}),[],!1,null,null,null);t.default=r.exports}}]);